<?php

namespace {{nameSpace}}\Form\{{formTypeUp}};
use App\Http\Controllers\Controller;
use {{repositoryNameSpace}}\Form\{{formTypeUp}}\I{{model}}UpdateRepository;
use App\Traits\BaseTrait;
use App\Models\{{model}};
use Illuminate\Contracts\View\View;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class {{model}}UpdateController extends Controller {

    use BaseTrait;
    public function __construct(private I{{model}}UpdateRepository $i{{model}}UpdateRepo) {
        $this->middleware(['auth:{{baseAuth}}','Has{{authModel}}Password','Has{{authModel}}Auth']);
        $this->lang= '{{langKey}}';
        $this->middleware(function ($request, $next) {
            $request->merge(['lang' => $this->lang]);
            return $next($request);
        });
    }

    /**
     * View {{modelDown}} update form
     *
     * @param Request $request
     * @return View
     */
    public function index(Request $request) : View
    {
        $data = $this->i{{model}}UpdateRepo->index($request);
        $data['lang'] = $this->lang;
        $data['item'] = {{model}}::find($request->id);
        return view('{{bladeRoute}}.form.{{formTypeDown}}.index')->with('data',$data);
    }

    /**
     * Update {{modelDown}} form
     *
     * @param Request $request
     * @return void
     */
    public function update(Request $request)
    {
       return $this->i{{model}}UpdateRepo->update($request);
    }
}
