<?php

namespace {{nameSpace}}\Modal\{{modalNameUp}};
use App\Http\Controllers\Controller;
use App\Traits\BaseTrait;
use Illuminate\Http\JsonResponse;
use View;
use Illuminate\Http\Request;
use {{repositoryNameSpace}}\Modal\{{modelNameUp}}\I{{modelNameUp}}Repository;
//vpx_imports

class {{modalNameUp}}ModalController extends Controller {

    use BaseTrait;
    public function __construct(private I{{modelNameUp}}Repository $i{{modelNameUp}}Repo) {
        $this->middleware(['auth:{{baseAuth}}','Has{{authModel}}Password','Has{{authModel}}Auth']);
        $this->lang= '{{langKey}}';
        $this->middleware(function ($request, $next) {
            $request->merge(['lang' => $this->lang]);
            return $next($request);
        });

    }

    /**
     * Loaded page for {{modalNameDown}}
     *
     * @param Request $request
     * @return View
     */
    public function display(Request $request) : JsonResponse
    {
        $data['lang'] = $this->lang;
        $data = [...$data,...$this->i{{modelNameUp}}Repo->display($request)];
        $view = View::make('{{bladeRoute}}.modal.{{modalNameKebab}}._modal', compact('data'))->render();
        $response = ['extraData' => ['inflate' => pxLang($data['lang'],'','common.response_success')],'view' => $view];
        return $this->response(['type' => 'success', 'data' => $response]);
    }
    //vpx_attach

}
